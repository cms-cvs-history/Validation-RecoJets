$ -- configBlockIO -- $
$=====================================================================
$
$ input/output files
$
$=====================================================================

  histInput    = MY_FAVORITE_HIST_FILE.hist                           $ hist file, which contains the names of the 
                                                                      $ histograms to be plottet 
  rootInput    = MY_FAVORITE_ROOT_FILE_1.root                         $ root input file(s) corresponding to samples
                 MY_FAVORITE_ROOT_FILE_2.root                         $ (separated by blanks);
                                                                      $
  inputDirs    = MY_FAVORITE_ANALYZER_1                               $ directory in which the histograms are kept
                 MY_FAVORITE_ANALYZER_2                               $ in within the root file; for edm::Analyzers 
                                                                      $ this  corresponds to the module name of the 
                                                                      $ Analyzer in the cfg file (separated by blanks)
  histFilter   = cal                                                  $ list of filter strings; only histograms con-
                 res                                                  $ taining this stings as substrings are plotted
                 fit                                                  $ (separated by blanks)
                                                                      $
  plotFilter   = cal                                                  $ list of filter strings; only histograms con-
                 res                                                  $ taining this stings as substrings are plotted
                                                                      $ (separated by blanks)
                                                                      $
  filterOption = begins                                               $ histogram filter option ('begins', 'ends' & 
                                                                      $ 'contains' are supported
  rootOutput   =                                                      $ root output file to write histograms to
                                                                      $
  outputDir    =                                                      $ output directory in root output file 
                                                                      $
  outputLabels = MY_FAVORITE_ROOTFILE_1_ANALYZER_1                    $ output labels for multiple ps/eps files 
                 MY_FAVORITE_ROOTFILE_1_ANALYZER_2                    $ (separated by blanks)
                 MY_FAVORITE_ROOTFILE_2_ANALYZER_1                    $
                 MY_FAVORITE_ROOTFILE_2_ANALYZER_2                    $
                                                                      $
  writePlotsTo = ./MY_FAVORITE_DIRECTORY                              $ directory to save the plottet histograms to;
                                                                      $ '.' is the working directory
  writePlotsAs = ps                                                   $ decide wether to write histograms to [ps] or 
                                                                      $ [eps] 

$ -- configBlockHist -- $
$=====================================================================
$
$ canvas and histogram steering
$
$=====================================================================

  xLog        =                                                       $ logs can be declared for each histogram 
                                                                      $ individually; per default they are  
  yLog        =                                                       $ switched off
                                                                      $
  xGrid       =                                                       $ grids can be declared for each histogram
                                                                      $ individually; per default they are 
  yGrid       =                                                       $ switched off

  histScale   =                                                       $ histogram scale; can be steered for each 
                                                                      $ histogram individually
  histMaximum =                                                       $ histogram maximum; can be steered for 
                                                                      $ each histogram individually
  histMinimum =                                                       $ histogram minimum; can be steered for 
                                                                      $ each histogram individually
  histErrors  =   1    1    1    1                                    $ draw histogram errors for each sample?
                                                                      $
  histType    =   1    1    1    1                                    $ defines wether histogram should be plotted
                                                                      $ as line[0], with poly markers[1] or filled 
                                                                      $ [2]; default is line [0]; can be steered 
                                                                      $ for each sample individually
  histStyle   =   1    1    1    1                                    $ defines line or fill style for each sample

  histColor   =   2    4    1    3                                    $ defines line/marker/fill color for each 
                                                                      $ sample
  lineWidth   =   5    5    5    5                                    $ defines line width for each sample

  markerStyle =  20   21   22   23                                    $ defines marker style for each sample

  markerSize  = 2.3  2.3  2.3  2.3                                    $ defines marker size for each sample

                                                                      $ set axes titles of histograms;
  xAxes       = "MY_FAVORITE_X-AXES_TITLE_1";                         $ has to be givin in " and has to end with ;
                "MY_FAVORITE_X-AXES_TITLE_2";                         $
                "..."                                                 $

  yAxes       = "MY_FAVORITE_Y-AXES_TITLE_1";                         
                "MY_FAVORITE_Y-AXES_TITLE_2";
                "..."

  legEntries  = "MY_FAVORITE_LEGEND_ENTRY_1";                         $ should contain a legend entry for each 
                "MY_FAVORITE_LEGEND_ENTRY_2";                         $ sample in " and separated by ;
                "MY_FAVORITE_LEGEND_ENTRY_3";                         $
                "MY_FAVORITE_LEGEND_ENTRY_4";                         $
                                                                      $
  legXLeft    = 0.25                                                  $ so far a steering of the legend coord's 
                                                                      $ is only supported globally
  legXRight   = 0.95                                                  $
                                                                      $
  legYLower   = 0.70

  legYUpper   = 0.95


$ -- configBlockFit -- $
$=====================================================================
$
$ fit steering steering
$
$=====================================================================

  evalType         = 0                                                $ mean/sigma evaluation type; 
                                                                      $ 0 is StabilizedGuass
                                                                      $ 1 is HistogramMean
                                                                      $ 2 is MaximalValue
                                                                      $ 3 is Quantile
  targetLabel      = cal res                                          $ contains a list of prefixes of target 
                                                                      $ histograms to write the fit results to
  fitFunctionName  = func                                             $ fit function name
                                                                      $
  fitFunctionTitle = Fit(Gauss)                                       $ title of the fit function to be shown in 
                                                                      $ the legend e.g.
  fitFunctionType  = 0                                                $ fit function type; 0 is stable fitted sngl
                                                                      $ gauss
  fitLowerBound    = 0.                                               $ lower boundary of fit range; to be adjusted 
                                                                      $ for ratio and difference
  fitUpperBound    = 2.                                               $ upper boundary of fit range; to be adjusted
                                                                      $ for ratio and difference
  xAxesFit         = "MY_FAVORITE_TYPE_A_X_AXES_TITLE";               $ axes labels for fit histograms; keep dif-
                     "MY_FAVORITE_TYPE_B_X_AXES_TITLE";               $ ferent labels here to adress them in the 
                     "...";                                           $ following variable (titleIndex), should be  
                                                                      $ in " and end with ;
                                                                      $
  yAxesFit         = "MY_FAVORITE_TYPE_A_Y_AXES_TITLE";               $ following variable (titleIndex), should be 
                     "MY_FAVORITE_TYPE_B_Y_AXES_TITLE";               $ in " and end with ;
                     "...";                                           $
                                                                      $
  titleIndex       = 0 0 0 0 0                                        $ titleIndex of x/yAxesFit for each if the 
                     1 1 1 1 1                                        $ the fit histograms
                                                                      $

$ -- configBlockSpecific -- $
$=====================================================================
$
$ macro specific steerables
$
$=====================================================================

  corrHistNames    = val_recVsRef                                     $ contains list of histogram names for 
                                                                      $ correlation plots
  corrAxesLabels   = "log_{10}(p_{t}(Jet)^{%s})";                     $ list of axes labels for correlation  
                                                                      $ plots
                                                                      $
  effHistNames     = match_effPt_0  match_effPt_1                     $ contains list of histogram names for
                     match_effEta_0 match_effEta_1                    $ match efficiency plots; obey order of
                                                                      $ histograms in the sense of (reference 
                                                                      $ first sample next)
  effAxesLabels    = "p_{t} (%s) [GeV]";                              $ list of axes labels for matching 
                     "#eta (%s)";                                     $ efficiency plots
                                                                      $
  cmpObjectLabels  = MY_LABEL_1 MY_LABEL_2                            $ contains a list of prefixes of target 
